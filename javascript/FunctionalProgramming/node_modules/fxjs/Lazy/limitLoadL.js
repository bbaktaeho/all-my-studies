"use strict";

var toIter = require("../Strict/toIter.js");

var go = require("../Strict/go.js");

var rangeL = require("./rangeL.js");

var mapL = require("./mapL.js");

var takeUntilL = require("./takeUntilL.js");

var reject = require("../Strict/reject.js");

var flatMapL = require("./flatMapL.js");

var catchNoopIter = require("../.internal/catchNoopIter.js");

module.exports = limitLoadL;

function limitLoadL(n, iter) {
  if (arguments.length == 1) return typeof n == 'number' ? _ => limitLoadL(n, _) : n;
  if (n == Infinity) return iter;
  iter = toIter(iter);
  return go(rangeL(Infinity), mapL(_ => go(rangeL(n), mapL(_ => iter.next()), reject(a => a.done), catchNoopIter)), takeUntilL(a => a.length < n), flatMapL(mapL(a => a.value)));
}