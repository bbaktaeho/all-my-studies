"use strict";

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.slice");

var entriesL = require("../Lazy/entriesL.js");

var mapEntriesL = require("../Lazy/mapEntriesL.js");

var cond = require("../Strict/cond.js");

var either = require("../Strict/either.js");

var go = require("../Strict/go.js");

var identity = require("../Strict/identity.js");

var isArray = require("../Strict/isArray.js");

var isFunction = require("../Strict/isFunction.js");

var isIterable = require("../Strict/isIterable.js");

var isObject = require("../Strict/isObject.js");

var isString = require("../Strict/isString.js");

var clonedIterableSymbol = require("./clonedIterableSymbol.js");

const delegateIterable = function* delegateIterable(iter) {
  yield* iter;
};

const cloneIterable = iter => {
  const cloned = delegateIterable(iter);
  cloned[clonedIterableSymbol] = true;
  return cloned;
};

module.exports = entriesDeepL;

function entriesDeepL(obj) {
  return go(obj, entriesL, mapEntriesL(cond([isArray, arr => arr.slice()], [isString, identity], [isIterable, cloneIterable], [either(isObject, isFunction), entriesDeepL], [() => true, identity])));
}